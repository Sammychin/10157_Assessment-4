---
title: "10157_Assessment 4 (u3176309)"
author: "Samantha Chin" 
date: "`r Sys.Date()`"
output:
  html_document:
    theme: paper
    highlight: pygments
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
```

## Introduction 

### Background to Basketball 
A basketball team is made up of 5 players who try to shoot a ball through a hoop elevated 10 feet above ground. The court is divided into 2 main sections by the mid court-line and when the offensive team puts the ball into play behind the mid-court line, they have 10 seconds to get the ball over the mid-court line. If not, the defense gets the ball. 

When a team makes a basket, they score 2 points and the ball goes back to the other team. If a basket or field goal is made outside the three-point arc, that basket is worth 3 points. A free throw is worth 1 point. 

### Position Descriptions 

1.	Point Guard 

-	usually the shortest player and best ball handler and passer
-	usually very fast and good at driving and short-range 
-	leads in assists and create shorts for themselves and teammates 
-	responsible for directing plays, known as play-maker in NBA 
-	increases team efficiency and generally have a high number of assists

2.	Shooting Guard 

-	The “wing” 
-	Three-point range and long mid range 
-	The ability to get into open space and to patiently and methodically circulate the 3point line linear with that of the ball. 

3.	Small Forward

-	The most versatile among the 5, interchangeable with the shooting guard position 
-	Quick, ability to “get to the line” and draw fouls. 
-	Accurate foul shooting is a common skill, records a large portion of their points from the foul ine 
-	Besides being able to drive to the basket, they are also good shooters from long range. The 2nd best 3-point shooers on court 

4.	Power Forward 

-	The team’s most powerful and dependable scorer, being able to score close to the basket while alos being able to shoot midrange jump shots 
-	The strength to guard bigger players close to the basket 
-	Good at rebounds 

5.	Center 

-	Usually players near baseline or close to the basket 
-	Usually tallest player on the floor 
-	Usually scores near the basket, skilled at gathering rebounds, contesting shots and setting screens on players 
-	A centre position helps create balance within the offense as when it becomes too easy to score from the low post, the center will get double teamed and this provides opportunity for open play around the perimeter. As perimeter players shoot better from long range, the defense will play out closer to the perimeter shooters and this in turn creates an opportunity for the center to score.

### The Scenario 

As the data analyst with the Chicago Bulls who are competing in the NBA (National Basketball Association), I have been tasked by the general manager to find the best five starting players (one for each position) that our team can afford with our budget for player contracts next season (2019-2020) at $118 million. 

This budget ranks us at 26th out of 30 where the team with the highest budget payroll is Portland at $148 million. In the most recent NBA season, our team placed 27th out of 30 based on win-loss record. With the budget payroll, I will have to justify choosing the best 5 starting players along with having to fill a full team roster.

## The Question 

Finding the best 5 starting players (one from each team) using key performance indicators for each position and accounting the budget to fill up the rest of the team (7 more players)

## The Data 

**Load the necessary libraries**
```{r library}
library(tidyverse)
library(broom)
library(dplyr)
library(ggplot2)
```

**Read in the raw data**
```{r read_data}
player_salaries <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
player_stats <- read_csv("data/raw/2018-19_nba_player-statistics.csv")
payroll <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
team_stats_1 <- read_csv("data/raw/2018-19_nba_team-statistics_1.csv")
team_stats_2 <- read_csv("data/raw/2018-19_nba_team-statistics_2.csv")

```

**Check the data frame**
```{r Structure, message = TRUE, echo = TRUE, results = "hide"}
str(player_salaries)
head(player_salaries)
tail(player_salaries)

str(player_stats)
head(player_stats)
tail(player_stats)

str(payroll)
head(payroll)
tail(payroll)

str(team_stats_1)
head(team_stats_1)
tail(team_stats_1) 

str(team_stats_2)
head(team_stats_2)
tail(team_stats_2)
```

**Check for NAs**
``` {r NA, message = FALSE, echo = TRUE, results = "hide"}
sum(is.na(player_salaries)) #no NA present 
sum(is.na(player_stats))
which(is.na(player_stats))
naniar::vis_miss(player_stats) #there are NAs present for % results (2p%, 3p%, FT%) which represents players who have not attempted a shot. Hence, there is no reason to remove these NAs as they present as a non-event 
sum(is.na(payroll)) #no NA present 
sum(is.na(team_stats_1)) #there are 3 columns without data and we will aim to remove the spare columns 
sum(is.na(team_stats_2)) #no NA present 
```

## Data Transformation 
```{r tidy}
#combine duplicate players that played for multiple teams
player_stats <- player_stats %>%
  group_by(player_name, Pos) %>%
  summarise_each(funs(sum), 3:27) %>% #summarise columns that are numeric 
  ungroup()

#remove accents and periods from player names in the data frame 
player_stats$player_name <- player_stats$player_name %>%
  stringi::stri_trans_general("Latin-ASCII") %>%
  stringr::str_replace_all(pattern = "\\.", replacement = "")

#Convert data for a tidier data frame 
player_stats <- rename(player_stats,
                       FGp = "FG%",
                       x3Pp = "3P%",
                       x2Pp = "2P%",
                       eFGp = "eFG%",
                       FTp = "FT%")

team_stats_1 <- rename(team_stats_1,
                       x3PAr = "3PAr",
                       TSp = "TS%",
                       eFGp = "eFG%",
                       TOVp = "TOV%",
                       ORBp = "ORB%",
                       FTpFGA = "FT/FGA",
                       DRBp = "DRB%")

team_stats_2 <- rename(team_stats_2,
                       FGp = "FG%",
                       x3P = "3P",
                       x3PA = "3PA",
                       x3Pp = "3P%",
                       x2P = "2P",
                       x2PA = "2PA",
                       x2Pp = "2P%",
                       FTp = "FT%")


```


## Exploratory Anlysis 
To justify wins in a basketball match, it is important that we look at selected team  offensive and defensive statistics. 
The selected few to observe would be: 

- ORtg (Offensive Rating)
- DRtg (Defensive Rating)
- NRtg (Net Rating)
- TOV% (Turnover Percentage)

```{r Team Ratings and Wins, message = FALSE}
ggplot(team_stats_1, aes(x= ORtg, y= W)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats_1, aes(x= DRtg, y= W)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats_1, aes(x= NRtg, y= W)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats_1, aes(x= TOVp, y= W)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")
```

ORtg and NRtg shows a positive relationship with wins, while DRtg and TOVp show a negative relationship with wins. 

However, NRtg (Net Rating) displayed the highest correlations as a strong positive relationship among the 4 variables, therefore we will further check the correlation using the Pearson Method. 

```{r Pearson Correlation}
cor(x = team_stats_1$NRtg, y= team_stats_1$W, method = "pearson")
```

**The results shows us a value that is close to 1 and affirms our prediction that it is a strong positive relationship between Net Rating (an estimate of point differential per 100 possessions) and Wins.**

As Net Rating has now been determined as an important factor to wins, it would benefit us to look at the Offensive Rating and Defensive Rating measures and the metrics that measure these variables. 

Literature shows some key performance indicators that have led teams to victory, it is shown that in close games, winning teams were determind by 3 point performance, free throws and defensive rebounds.(1)

Furthermore, it has also been shown that dominance of assists and effective defensive rebounding are indications of a winning team.(2)

The NBA also provides Efficiency in basketball which usues statistical values for comparing the overall value of players. Some basic individual statistics include points, rebounds, assists, steals, blocks, turnovers and shot attempts. 

Based on this, our focus on offensive traits would be:

- 3 point shooting percentage (x3Pp)
- 2 point shooting percentage (x2Pp)
- Assists (AST)
- Total Rebounds (TRB)

and the defensive traits would be: 

- Steals (STL)
- Blocks (BLK)
- Turnovers (TOV) *(a negative emphasis on this variable as this is a loss of possession)*

```{r Offensive and Defensive Trait Stats}
team_stats <- merge(team_stats_1, team_stats_2, by = "Team") #merging the 2 team statistic data into one file by Team. 

#Using the Offensive and Defensive traits listed above, let's have a look to see if we get a linear relationship 
ggplot(team_stats, aes(x= x3Pp, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= x2Pp, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= AST, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= TRB, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= STL, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= BLK, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

ggplot(team_stats, aes(x= TOV, y= NRtg)) +
  geom_point(alpha = 0.5, colour ="red") +
  geom_smooth(method = lm, colour = "black")

```

All variables except steals and turnovers showed a positive relationship.
As expected, turnovers showed a moderate negative relationship 

```{r Data Transformation}
team_stats <- team_stats %>%
  mutate(x3Pp_per_game = x3Pp / G ,
         x2Pp_per_game = x2Pp / G ,
         AST_per_game = AST / G ,
         TRB_per_game = TRB / G ,
         STL_per_game = STL / G ,
         BLK_per_game = BLK / G ,
         TOV_per_game = TOV / G)
```

```{r Multiple Linear Regression}
fit <- lm(NRtg ~ x3Pp_per_game + x2Pp_per_game + AST_per_game + TRB_per_game + STL_per_game + BLK_per_game + TOV_per_game, data = team_stats)

tidy(fit, conf.int = TRUE)
```

The slope coefficient says that teams that get 1 more: 
x3Pp_per_game than the average team, score 7690.16 more NRtg_per_game than the average team 
x2Pp_per_game than the average team, score 10445.90 more NRtg_per_game than the average team 
AST_per_game than the average team, score 0.23 less NRtg_per_game than the average team
TRB_per_game than the average team, score 1.04 more NRtg_per_game than the average team 
STL_per_game than the average team, score 1.12 more NRtg_per_game than the average team
BLK_per_game than the average team, score 0.66 more NRtg_per_game than the average team 
TOV_per_game than the average team, score 1.72 less NRtg_per_game than the average team 

## Predicted Values 
Our model fit would look like: 

Net Rating = -128 + 7690.16*x3Pp_per_game + 10445.90*x2Pp_per_game + 0.23*AST_per_game + 1.04*TRB_per_game + 1.12*STL_per_game + 0.66*BLK_per_game -1.72*TOV_per_game 

## Assumptions 

### The response variable should be continuous (i.e. ratio/interval) 
NRtg (Net Rating) is a ratio scale of measurement 

### There are two or more explanatory variables that are either continuous or categorical 
All our explanatory variables are continuous 

### There should be independence of observations 
```{r Independance of Observations}
car::durbinWatsonTest(fit)
```
The Durbin-Watson statistic shows a value of 1.62 which indicates that there is no correlation between residuals 

### There should be a linear relationship between the response variable and each explanatory variable
```{r Partial Regression Plot}
car::avPlots(fit) #Plotting each explanatory variable against the response variable while accounting for the effect of the other explanatory variables 
```

We can observe that there is a linear relationship between NRtg and each of our explanatory variables. However, AST_per_game displays a weak positive relationship. 

### There should be no significant outliers, influential or high leverage points
```{r Outliers}
std_res <- rstandard(fit)
points <- 1:length(std_res)

ggplot(data = NULL, aes(x=points, y= std_res)) + 
  geom_point(colour = "red")+
  ylim(c(-4,4)) +
  geom_hline(yintercept = c(-3,3), colour = "black", linetype = "dashed")
```

There is no evidence of outliers beyond 3 standard deviations from 0, in fact all points are within 2 standard deviations of 0. 

```{r Leverage Points}
hats <- hatvalues(fit)
hats_labels <- if_else(hats >= 0.4, paste(points), "")

ggplot(data = NULL, aes(x= points, y= hats)) +
  geom_point(colour = "red") +
  geom_text(aes(label = hats_labels), nudge_x = 1)
```

All values are closer to 0 than 1. However, there are 4 points above 0.4 which are 6,11,20,21 which might need further investigating. 

```{r Cooks Distance}
cook <- cooks.distance(fit)
cook_labels <- if_else(cook >= 0.2, paste(points), "")

ggplot(data = NULL, aes(x = points, y = cook)) +
  geom_point(colour = "red") + 
  geom_text(aes(label = cook_labels), nudge_x = 1)
```

There does not appear to be any influence or leverage in this instance. 

### The data needs to show homoscedasticity
```{r Homoscedasticity}
#Plotting of residuals against fitted values 
res <- residuals(fit)
fitted <- predict(fit)

ggplot(team_stats, aes(x=fitted, y=res)) +
  geom_point(colour = "red") +
  geom_hline(yintercept = 0, colour = "black", linetype = "dashed") +
  geom_smooth(se= FALSE, colour = "black")
```

The randomusation of the data shows homoscedasticity (constant variance)

### The residuals should be normally distributed
```{r Normality}
#Check for normal distribution, using a histogram 

ggplot(data = NULL, aes(x = res)) +
  geom_histogram(colour = "black", fill = "red", binwidth = 1)
```

The data appears to be normally distributed 

```{r Q-Q Plot}
#We can also check normality through a normal Q-Q plot 

ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line()
```

The Q-Q Plot shows that the points appear normally distributed 

### There should not be multicollinearity between the explanatory variables
```{r Pairs}
pairs(formula = ~ x3Pp_per_game + x2Pp_per_game + AST_per_game + TRB_per_game + STL_per_game + BLK_per_game + TOV_per_game, data = team_stats)
```

There appears to be no evidence of a linear relationship between any of our explanatory variables except for AST_per_game and x2Pp_per_game which would make sense if assists increased that the 2 point percentage would increase too. There is also a weak relationship between BLK_per_game and x2Pp_per_game. 

```{r VIF}
car::vif(fit)

sqrt(car::vif(fit))
```

There is no evidence of multicollinearity. The sqaure root of the VIF indicates how much larger the standard error increases compared to if that variable had 0 correlation to other predictors.  
The standard error of BLK_per_game is 1.36 times larger than if there was 0 correlation with the other explanatory variables. 

## Model Testing 

### The model we are using is: 

### $Net Rating: -128 + 7690.16*x3Pppergame + 10445.90*x2Pppergame + 0.23*ASTpergame + 1.04*TRBpergame + 1.12*STLpergame + 0.66*BLKpergame -1.72*TOVpergame$


**Applying the Model (Expected_NRtg vs NRtg (2018-2019))**
```{r Applying the Model}
team_stats <- mutate(team_stats, exp_NRtg_per_game = predict(fit, newdata = team_stats))

ggplot(team_stats, aes(exp_NRtg_per_game, NRtg, label = Team)) +
  geom_point(colour = "red") +
  geom_text(nudge_y = 0.5, nudge_x = -1.5, cex = 1.75) +
  geom_abline(linetype = "dashed", colour = "black")
```

### Applying the Model (Expected_NRtg vs Wins (2018-2019))
```{r Wins:NRtg}
ggplot(team_stats, aes(x = W, y= exp_NRtg_per_game, label = Team)) +
  geom_point(colour = "red") +
  geom_text(nudge_x = 3, nudge_y = 0.5, cex = 1.75) +
  geom_abline(linetype = "dashed", colour = "black")
```

## Player Metrics 

Calculate the number of minutes each team played per game on average across the league. 
```{r Minutes Summarised}
min_per_game <- team_stats %>%
  group_by(Team) %>%
  summarise(min_per_game = (MP/G)) %>%
  pull(min_per_game) %>%
  mean 

min_per_game
```

Creating new statistics per game for each player while adjusting the average minutes played per game
```{r Per Minute Performance}
players <- player_stats %>%
group_by(player_name) %>%
summarise(G = sum(MP) / min_per_game,
          x3Pp_per_game = sum(x3Pp) / G ,
          x2Pp_per_game = sum(x2Pp) / G ,
          AST_per_game = sum(AST) / G ,
          TRB_per_game = sum(TRB) / G ,
          STL_per_game = sum(STL) / G ,
          BLK_per_game = sum(BLK) / G ,
          TOV_per_game = sum(TOV) / G, 
          MP = sum(MP)) %>%
  filter(MP >= 200) %>%
  select(-G)
```

### Expected Net Rating Per Player

The next step is to calculate player-specific expected net rating based on our new adjusted box score statistics. 

The expected net rating metric can be interpreted as the net effect we expect a player has on the overall score if all players are exactly like that player. 

```{r Expected NRtg per player}
players <- mutate(players, exp_NRtg = predict(fit, newdata = players))

players %>%
  ggplot(aes(x = exp_NRtg)) +
  geom_histogram(binwidth = 100, colour = "black", fill = "red")
```

### Adding Salary & Position 

This is the first step in answering our question for this analysis. 
We need to add the players' salary and positions back into our source. 

```{r Salary & Position}
#joining individual player salaries to player statistics 
players <-player_salaries %>%
  select(player_name, salary) %>% 
  right_join(players, by = "player_name")

players <- player_stats %>%
  select(player_name, Pos) %>% 
  right_join(players, by = "player_name")

```

### Selecting Players by Expected NRtg 

Let's see who the best expected net rating players are 

```{r Expected NRtg}
players %>%
  select(player_name, Pos, salary, exp_NRtg) %>%
  arrange(desc(exp_NRtg), salary) %>%
  top_n(20)

players %>% 
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = Pos)) +
  geom_point() +
  xlab("Salary (Millions)")

```

## Selecting Players for Each Position 

To complete the aim of our analysis, we will look at each position to come up with our target starting 5 

### Point Guard 
```{r Target Point Guard}
players %>%
  filter(Pos == 'PG') %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = player_name)) +
  geom_point() + 
  geom_text(aes(label=ifelse(exp_NRtg > 5,as.character(player_name),'')),hjust=0,vjust=-1) +
  expand_limits(x = 45, y = 75)+
  theme(legend.position = "none")+
  xlab("Salary (Millions)") 
```

Andrew Harrison appears to be the best in the league and would be our top pick. 

### Shooting Guard 
```{r Target Shooting Guard}
players %>%
  filter(Pos == 'SG' | Pos == 'SG-SF' | Pos == 'PF-SG' | Pos == 'SG-SF') %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = player_name)) +
  geom_point() + 
  geom_text(aes(label=ifelse(exp_NRtg > 4,as.character(player_name),'')),hjust=-0.2,vjust=0.5) +
  expand_limits(x = 30)+
  theme(legend.position = "none")+
  xlab("Salary (Millions)") 
```

Brandon Sampson would be our preferred pick, but if not Daniel Hamilton and Theo Pinson are both competitive options or options for our bench. 

### Small Forward 
```{r Target Small Forward}
players %>%
  filter(Pos == 'PF-SF' | Pos == 'SF' | Pos == 'SF-SG' | Pos == "SG-SF") %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = player_name)) +
  geom_point() + 
  geom_text(aes(label=ifelse(exp_NRtg > 10,as.character(player_name),'')),hjust=1.1,vjust=0.5) +
  theme(legend.position = "none")+
  expand_limits(x = -10)+
  xlab("Salary (Millions)") 
```

James Nunnally is the best Small Forward as his Net Rating is 50% above everyone else in the league and he costs less than $1 million. 

### Power Forward 
```{r Target Power Forward}
players %>%
  filter(Pos == 'C-PF' | Pos == 'PF-C' | Pos == 'PF' | Pos == 'PF-SF' | Pos == "SG-PF") %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = player_name)) +
  geom_point() + 
  geom_text(aes(label=ifelse(exp_NRtg > 30,as.character(player_name),'')),hjust=-0.05,vjust=0.5) +
  expand_limits(x = 35)+
  theme(legend.position = "none")+
  xlab("Salary (Millions)") 
```

Skal Labissiere would be the best option for the team as a Power Forward as his Net Rating is the highest and he costs less than $5 Million. 

### Center 
```{r Target Center}
players %>%
  filter(Pos == 'C-PF' | Pos == 'PF-C'| Pos == 'C') %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, color = player_name)) +
  geom_point() + 
  geom_text(aes(label=ifelse(exp_NRtg >40,as.character(player_name),'')),hjust=1.2,vjust=0.5) +
  expand_limits(x = -10)+
  theme(legend.position = "none")+
  xlab("Salary (Millions)") 
```

Jason Smith is the best Center in the league, his Net Rating is over 50% better than everyone in the league other than Pau Gasol and he still costs less than him. 

# Chicago Bulls 2019-2020 
Based on our analysis, let's create a new data frame with our top 5 starting players for each position. 

```{r Starting 5 2019-2020}
starting_5 <- players %>%
  filter(player_name %in% c("Jason Smith", "Skal Labissiere", "James Nunnally", "Brandon Sampson", "Andrew Harrison")) %>%
  arrange(desc(salary))

View(starting_5)

#visualisation of our target starting 5
starting_5 %>%
  ggplot(aes(x = salary/1000000, y = exp_NRtg, label = player_name)) +
  geom_point(colour = "red") +
  geom_text(nudge_x = 7, cex = 5) +
  expand_limits(x = 40)+
  theme(legend.position = "none")+
  xlab("Salary (Millions)") 

sum(starting_5$salary)

```
The sum of the Chicago Bulls starting team for 2019-2020 based on my analysis would be $18,989.956. This leaves us with $99,010,044 for the remainder of the team. 

Jason Smith and Christian Wood would be good options for the bench as Power Forwards. 
And as mentioned above, Daniel Hamilton and Theo Pinson would be good options for our bench as Shooting Guards. 

With the remainder of the money in scouting the remainder of the team, we could also use it to compete with other teams who would be looking to scout the same players too. 


# References 

1. Csataljay G, O’Donoghue P, Hughes M, Dancs H. Performance indicators that distinguish winning and losing teams in basketball. International Journal of Performance Analysis in Sport. 2009 Apr 1;9(1):60-6. 

2. García J, Ibáñez SJ, De Santos RM, Leite N, Sampaio J. Identifying basketball performance indicators in regular season and playoff games. Journal of human kinetics. 2013 Mar;36:161.